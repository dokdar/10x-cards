name: Pull Request CI

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_SITE_URL: ${{ secrets.SUPABASE_SITE_URL }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      OPENROUTER_API_URL: ${{ secrets.OPENROUTER_API_URL }}
      OPENROUTER_DEFAULT_MODEL: ${{ secrets.OPENROUTER_DEFAULT_MODEL }}
      AI_GENERATION_TIMEOUT: ${{ secrets.AI_GENERATION_TIMEOUT }}
      AI_MAX_RETRIES: ${{ secrets.AI_MAX_RETRIES }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [unit-test, e2e-test]
    if: always() && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success'
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR Success
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const comment = `## ‚úÖ Pull Request CI - Wszystkie testy przesz≈Çy pomy≈õlnie!

            **Status test√≥w:**
            - ‚úÖ Lintowanie kodu
            - ‚úÖ Testy jednostkowe z pokryciem kodu
            - ‚úÖ Testy E2E (Chromium)

            **Commit:** \`${context.sha.substring(0, 7)}\`
            **Branch:** \`${pullRequest.head.ref}\`

            Wszystkie sprawdzenia zosta≈Çy zako≈Ñczone pomy≈õlnie. Pull request jest gotowy do przeglƒÖdu! üöÄ`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

  status-comment-failure:
    name: Status Comment (Failure)
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always() && (needs.lint.result == 'failure' || needs.unit-test.result == 'failure' || needs.e2e-test.result == 'failure')
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR Failure
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const lintStatus = '${{ needs.lint.result }}' === 'success' ? '‚úÖ' : '‚ùå';
            const unitTestStatus = '${{ needs.unit-test.result }}' === 'success' ? '‚úÖ' : '‚ùå';
            const e2eTestStatus = '${{ needs.e2e-test.result }}' === 'success' ? '‚úÖ' : '‚ùå';

            const comment = `## ‚ùå Pull Request CI - Niekt√≥re testy nie przesz≈Çy

            **Status test√≥w:**
            - ${lintStatus} Lintowanie kodu
            - ${unitTestStatus} Testy jednostkowe z pokryciem kodu
            - ${e2eTestStatus} Testy E2E (Chromium)

            **Commit:** \`${context.sha.substring(0, 7)}\`
            **Branch:** \`${pullRequest.head.ref}\`

            Sprawd≈∫ logi test√≥w i popraw b≈Çƒôdy przed kolejnym push'em. üîß`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
