---
import "../styles/global.css";
import { Header } from "@/components/Header";

interface Props {
  title?: string;
  description?: string;
}

const { title = "10x Cards", description = "Aplikacja do nauki z fiszkami" } = Astro.props;

// Placeholder dla danych sesji z middleware
// W przyszłości będzie pobierane z Astro.locals
const user = Astro.locals.user as any;
const isAuthenticated = !!user;
const userEmail = user?.email;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script is:inline>
      // Prevent flash of unstyled content (FOUC) by setting theme before page renders
      (function () {
        const getTheme = () => {
          const stored = localStorage.getItem("theme");
          if (stored === "light" || stored === "dark") return stored;
          // System preference
          return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
        };

        const theme = getTheme();
        if (theme === "dark") {
          document.documentElement.classList.add("dark");
        }
      })();
    </script>
  </head>
  <body class="min-h-screen flex flex-col">
    <Header client:load isAuthenticated={isAuthenticated} userEmail={userEmail} />
    <slot />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
